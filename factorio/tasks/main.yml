---
- name: install libselinux-python binary for Ansible to work
  yum:
    name:
      - libselinux-python
      - python-twisted-core 
      - python-psutil 
      - python-urwid 
      - python-twisted-web
    state: present
  when: ansible_distribution in ['CentOS', 'Red Hat Enterprise Linux']
      
- name: install libselinux-python binary for Ansible to work
  apt:
    name:
      - python-selinux
      - xz-utils
    state: present
  when: ansible_distribution in ['Debian', 'Ubuntu']
    
- name: create factorio group
  group:
    name: factorio
    state: present

- name: create factorio user
  user:
    name: factorio
    group: factorio
    createhome: yes
    home: /opt/factorio
    shell: /sbin/nologin
    comment: "factorio User"
    state: present

- name: mkdir for general cases
  file:
    path: "{{ item }}"
    state: directory
    owner: factorio
    group: factorio
    recurse: yes
    mode: 0755
  with_items:
    - /opt/factorio/
    - /opt/factorio/{{ factorio.save_name }}
    - /opt/factorio/backup

- name: download factorio bin
  get_url:
    url: "https://factorio.com/get-download/{{ factorio.version }}/headless/linux64"
    dest: /opt/factorio/factorio.tar.xz

- name: unarchive factorio
  unarchive:
    src: /opt/factorio/factorio.tar.xz
    dest: /opt/factorio/
    creates: /opt/factorio/factorio
    remote_src: yes
    mode: 0755
    owner: factorio
    group: factorio

- name: download YARM mods
  get_url:
    url: "https://github.com/narc0tiq/YARM/releases/download/v0.8.102/YARM_0.8.102.zip"
    dest: /opt/factorio/factorio/mods/YARM_0.8.102.zip
    owner: factorio
    group: factorio

- name: download graftorio2 mods
  get_url:
    url: "https://github.com/remijouannet/graftorio2/releases/download/0.0.9/graftorio2_0.0.9.zip"
    dest: /opt/factorio/factorio/mods/graftorio2_0.0.9.zip
    mode: 0755
    owner: factorio
    group: factorio

- name: server settings
  template:
    src: server-settings.json.j2
    dest: "/opt/factorio/server-settings.json"
    mode: 0755
    owner: factorio
    group: factorio  
  notify:
    - restart factorio

- name: Create Unit file factorio
  template:
    src: factorio.service.j2
    dest: /etc/systemd/system/factorio.service
    mode: 0640
  notify:
    - restart factorio
    - reload systemctl

- name: push create_save script
  template:
    src: create_save.sh.j2
    dest: /opt/factorio/create_save.sh
    owner: factorio
    group: factorio  
    mode: 0755

- name: Start factorio
  service:
    name: factorio.service
    state: started
    enabled: yes

- name: push backup script
  template:
    src: backup_factorio.sh.j2
    dest: /opt/factorio/backup_factorio.sh
    mode: 0755

- name: backup every day
  cron:
    name: "backup_factorio"
    state: present
    minute: "15"
    hour: "8"
    job: "/opt/factorio/backup_factorio.sh | logger -t backup_factorio"
