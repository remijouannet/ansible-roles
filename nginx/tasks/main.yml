---
- name: nginx Add key
  apt_key: 
    url: https://nginx.org/keys/nginx_signing.key
    id: 7BD9BF62
    state: present
  when: ansible_distribution in ['Debian', 'Ubuntu']

- name: Repo nginx
  apt_repository:
    repo: deb http://nginx.org/packages/debian/ jessie nginx
    state: present
  when: ansible_distribution in ['Debian', 'Ubuntu']

- apt: 
    name: "nginx" 
    state: latest 
    update_cache: yes
  when: ansible_distribution in ['Debian', 'Ubuntu']

- name: Import nginx key
  rpm_key:
    key: https://nginx.org/keys/nginx_signing.key
    state: present
    validate_certs: no
  when: ansible_distribution in ['CentOS', 'Red Hat Enterprise Linux', 'Fedora']

- name: add nginx repo
  yum_repository:
    name: nginx
    description: nginx
    baseurl: http://nginx.org/packages/mainline/rhel/$releasever/$basearch/
  when: ansible_distribution in ['CentOS', 'Red Hat Enterprise Linux', 'Fedora']

- name: Ensure Nginx is installed
  yum:
    name: nginx
    state: installed

- pip:
    name: passlib

- name: Ensure Nginx is installed
  yum:
    name: python2-pip
    state: installed

- import_tasks: pem.yml
  when: nginx.pem is defined


- name: mkdir stream.d
  file:
    path: /etc/nginx/stream.d
    state: directory
    owner: root
    group: root
    recurse: yes
    mode: 0740

- name: Nginx custom configuration
  template:
    src: nginx.conf.j2
    dest: "/etc/nginx/nginx.conf"
    owner: root
    group: root
    mode: 0740

- name: Nginx custom configuration
  template:
    src: "{{ item }}"
    dest: "/etc/nginx/conf.d/{{ item }}.conf"
    owner: root
    group: root
    mode: 0740
  notify:
    - restart nginx
  with_items:
    - "{{ nginx.custom_configuration }}"
  when: nginx.custom_configuration is defined

- name: Nginx stream configuration
  template:
    src: stream.conf.j2
    dest: "/etc/nginx/stream.d/{{ item.name }}.conf"
    owner: root
    group: root
    mode: 0740
  notify:
    - restart nginx
  with_items:
    - "{{ nginx.stream }}"
  when: nginx.stream is defined

- name: Nginx proxy configuration
  template:
    src: proxy.conf.j2
    dest: "/etc/nginx/conf.d/{{ item.name }}.conf"
    owner: root
    group: root
    mode: 0740
  notify:
    - restart nginx
  with_items:
    - "{{ nginx.proxy }}"
  when: nginx.proxy is defined

- name: Nginx fileserver configuration
  template:
    src: fileserver.conf.j2
    dest: "/etc/nginx/conf.d/{{ item.name }}.conf"
    owner: root
    group: root
    mode: 0740
  notify:
    - restart nginx
  with_items:
    - "{{ nginx.fileserver }}"
  when: nginx.fileserver is defined

- htpasswd:
    path: /etc/nginx/htpasswd
    name: "{{ item.name }}"
    password: "{{ item.password }}"
    owner: nginx
    group: nginx
    mode: 0600
  with_items:
      - "{{ nginx.htpasswd }}"


- import_tasks: fileserver.yml
  when: nginx.fileserver is defined

- service:
    name: nginx
    state: started
    enabled: yes
